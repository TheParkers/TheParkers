# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop, Samarth ]
  pull_request:
    branches: [ develop, Samarth ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  backendbuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1

      - name: Setup Python
        uses: actions/setup-python@v2.3.1

      - name: Install MySQL
      - uses: mirromutth/mysql-action@v1.1
        with:
            host port: 3306 # Optional, default value is 3306. The port of host
            container port: 3306 # Optional, default value is 3306. The port of container
            mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
            mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
            mysql root password: '' #${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
            mysql user: 'mysql_user' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
            mysql password: 'mysqluser_pwd0' #${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"

      - name: Wait for MYSQL server.
        run: |
          for i in `seq 1 10`;
          do
            nc -z 127.0.0.1 3306 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for MySQL && exit 1

      - name: update APT list
        run: sudo apt-get update -y

      - name: Install npm and tools
        run: sudo apt install npm && sudo npm install -g firebase-tools

      - name: Install mysql client
        run: echo "Installing packages..." && sudo apt install mysql-client-8.0 -y && sudo apt install libmysqlclient-dev
       
      - name: install python dependencies
        run: python -m pip install --upgrade pip && pip install -r .github/workflows/requirements.txt
      
      - name: run django server
        run: cd django_project && python manage.py runserver

      - name: Run Tests
        run: |
          python manage.py test

      - name: version check
        run: echo "Django version:" $(django-admin --version) && echo "MySQL version:" $(mysql --version) &&
            echo "npm version:" $(npm --version) && echo "node version:" $(node --version)
      