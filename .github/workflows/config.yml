# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  pull_request:
    branches: [ 'develop' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  branch: ${GITHUB_REF##*/}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  backendbuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
        uses: actions/checkout@v2

      - name: setup Node.js environment
        uses: actions/setup-node@v2.5.1

      - name: setup Python
        uses: actions/setup-python@v2.3.1

      - name: install python dependencies
        run: python -m pip install --upgrade pip && pip install -r backend/requirements.txt
      
      - name: check django sanity
        run: |
            cd backend
            python manage.py check
  
  Deployment:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDS }}'
          
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDS }}
        
      - name: Generate frontend image name 
        run: echo "DOCKERFRONTENDIMAGE=theparkersdev-frontend-${{ env.branch }}-${{ env.GITHUB_RUN_ID }}" >> $GITHUB_ENV
      
      - name: Generate backend image name 
        run: echo "DOCKERBACKENDIMAGE=theparkersdev-backend-${{ env.branch }}-${{ env.GITHUB_RUN_ID }}" >> $GITHUB_ENV
        
      # - name: Build docker image
      #   run: docker-compose -f docker-compose build
      
      # - name: Push docker Image to GCR (Google cloud registry)
      #   run: docker push ${{ secrets.GCP_REGISTRY }}:${{ env.DOCKERIMAGE }}
      
      # - name: Deploy a Cloud Run service
      #   id: deploy-service
      #   uses: google-github-actions/deploy-cloudrun@v0
      #   with:
      #     image: ${{ secrets.GCP_REGISTRY }}:${{ env.DOCKERIMAGE }}
      #     service: theparkers-placeholder 
      #     region: us-central1
      

          
