# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  branch: ${GITHUB_REF##*/}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  backendbuild:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1

      - name: Setup Python
        uses: actions/setup-python@v2.3.1

      - name: install python dependencies
        run: python -m pip install --upgrade pip && pip install -r .github/workflows/requirements.txt
  
  Deployment:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          gcloud_service_key: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          registry: ${{ env.GCP_REGISTRY }}
          username: ${{ secrets.GCP_USERNAME }}
          password: ${{ secrets.GCP_PASSWORD }}
        
      - name: generate image name 
        run: echo "DOCKERIMAGE=theparkersdev-${{ env.branch }}-${{ env.GITHUB_JOB }}" >> $GITHUB_ENV
        
      - name: build docker image
        run: docker build -t ${{ env.GCP_REGISTRY }}:${{ env.DOCKERIMAGE }} .
      
      - name: label built docker image for gcp
        run: docker push ${{ env.GCP_REGISTRY }}:${{ env.DOCKERIMAGE }}
